name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: From changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get latest release info
        id: query-release-info
        uses: release-flow/keep-a-changelog-action@v3
        with:
          command: query
          version: latest-or-unreleased
      - name: Get latest release
        id: latest-release
        uses: actions/github-script@v7
        if: steps.query-release-info.outputs.version != '[unreleased]'
        continue-on-error: true
        with:
          script: |
            return await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: "v${{ steps.query-release-info.outputs.version }}"
            })
      - name: Create release
        uses: actions/github-script@v7
        if: steps.latest-release.outcome == 'failure'
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "v${{ steps.query-release-info.outputs.version }}",
              target_commitish: context.sha,
              name: "v${{ steps.query-release-info.outputs.version }}",
              body: "${{ steps.query-release-info.outputs.release-notes }}"
            })
